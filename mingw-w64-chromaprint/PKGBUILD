# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=chromaprint
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.6.0
pkgrel=1
pkgdesc="Library that implements a custom algorithm for extracting fingerprints from any audio source (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://acoustid.org/chromaprint"
license=("LGPL")
msys2_references=(
  'anitya: 286'
  'archlinux: chromaprint'
  'gentoo: media-libs/chromaprint'
)
depends=("${MINGW_PACKAGE_PREFIX}-cc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-ninja")
source=("https://github.com/acoustid/${_realname}/releases/download/v${pkgver}/${_realname}-${pkgver}.tar.gz"
        "libchromaprint.pc.cmake.patch")
sha256sums=('9d33482e56a1389a37a0d6742c376139fa43e3b8a63d29003222b93db2cb40da'
            'dc822418cf9b82e9d1a512bbfd0bc7426f1d08f952dffd4afbc651dfa60a91a9')
options=('libtool' 'staticlibs')

prepare() {
  sed -i "s/@PACKAGE@/${_realname}-${pkgver}/g" "libchromaprint.pc.cmake.patch"
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -Np1 -i "${srcdir}/libchromaprint.pc.cmake.patch"
}

build() {
  _common_opts=(
    -G"Ninja"
    -DCMAKE_BUILD_TYPE=Release \
    -DFFT_LIB=fftw3 \
    -DAUDIO_PROCESSOR_LIB="dummy" \
    -DBUILD_TESTS=off \
    -DBUILD_TOOLS=off \
  )

  msg "Build static version"
  mkdir -p "${srcdir}/static-${MSYSTEM}" && cd "${srcdir}/static-${MSYSTEM}"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  cmake \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DBUILD_SHARED_LIBS=off \
    "${_common_opts[@]}" \
    ../${_realname}-${pkgver}

  cmake --build ./

  msg "Build shared version"
  mkdir -p "${srcdir}/shared-${MSYSTEM}" && cd "${srcdir}/shared-${MSYSTEM}"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  cmake \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DBUILD_SHARED_LIBS=on \
    "${_common_opts[@]}" \
    ../${_realname}-${pkgver}

  cmake --build ./
}

package() {
  # shared
  cd "${srcdir}/shared-${MSYSTEM}"
  DESTDIR="${pkgdir}" cmake --install ./

  # static
  cd "${srcdir}/static-${MSYSTEM}"
  DESTDIR="${pkgdir}" cmake --install ./
}
