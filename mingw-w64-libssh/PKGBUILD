# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=libssh
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.11.3
pkgrel=1
pkgdesc="Library for accessing ssh client services through C libraries (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://www.libssh.org/"
msys2_repository_url='https://git.libssh.org/projects/libssh.git/'
msys2_issue_tracker_url='https://gitlab.com/libssh/libssh-mirror/-/issues'
msys2_references=(
  'cpe: cpe:/a:libssh:libssh'
)
license=('spdx:LGPL-2.1-or-later')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkgconf")
depends=("${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-libwinpthread")
checkdepends=("${MINGW_PACKAGE_PREFIX}-cmocka")
source=("https://www.libssh.org/files/${pkgver%.*}/${_realname}-${pkgver}.tar.xz"{,.asc}
         "libssh.pc.cmake.patch")
sha256sums=('7d8a1361bb094ec3f511964e78a5a4dba689b5986e112afabe4f4d0d6c6125c3'
            'SKIP'
            '7568ee26ab7e4227096b3fffc9f6394e7facb70c5ac90b76b44c1081656fe460')
validpgpkeys=('8DFF53E18F2ABC8D8F3C92237EE0FC4DCC014E3D'  # Andreas Schneider <asn@cryptomilk.org>
              '88A228D89B07C2C77D0C780903D5DF8CFDD3E8E7') # libssh release key (release key) <libssh@libssh.org>

prepare() {
 sed -i "s/@PACKAGE@/${_realname}-${pkgver}/g" "libssh.pc.cmake.patch" 
 cd "${srcdir}"/${_realname}-${pkgver}
  # patch -p1 -i "${srcdir}"/002-libssh-fix-pkgconfig.patch

  patch -p1 -i "${srcdir}"/libssh.pc.cmake.patch
}

build() {
  common_config=(
    -G"Ninja"
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX}
    -DWITH_GSSAPI=OFF
    -DUNIT_TESTING=OFF
    -DWITH_EXAMPLES=OFF
    -DWITH_SERVER=OFF
    -DWITH_SFTP=ON
    -DWITH_ZLIB=ON 
  )

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    "${common_config[@]}" \
    -DBUILD_SHARED_LIBS=ON \
    -S "${_realname}-${pkgver}" \
    -B "build-${MSYSTEM}-shared"

  ${MINGW_PREFIX}/bin/cmake.exe --build "build-${MSYSTEM}-shared"

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    "${common_config[@]}" \
    -DBUILD_SHARED_LIBS=OFF \
    -S "${_realname}-${pkgver}" \
    -B "build-${MSYSTEM}-static"

  ${MINGW_PREFIX}/bin/cmake.exe --build "build-${MSYSTEM}-static"
}

check() {
  cd "${srcdir}/build-${MSYSTEM}-shared"
  ${MINGW_PREFIX}/bin/cmake -DUNIT_TESTING=ON ../${_realname}-${pkgver}
  ${MINGW_PREFIX}/bin/cmake --build .
  ${MINGW_PREFIX}/bin/ctest.exe ./ || true
}

package() {
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --install "build-${MSYSTEM}-shared"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --install "build-${MSYSTEM}-static"

  # # prevent duplicate symbols
  objcopy --redefine-sym explicit_bzero=libssh_explicit_bzero "${pkgdir}"/${MSYSTEM}/lib/libssh.a
  objcopy --redefine-sym strndup=libssh_strndup "${pkgdir}"/${MSYSTEM}/lib/libssh.a

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  for _f in "${pkgdir}${MINGW_PREFIX}"/lib/cmake/libssh/*.cmake; do
    sed -e "s|${PREFIX_WIN}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
  done
}
